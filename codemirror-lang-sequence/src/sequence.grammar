@top Sequence {
  optSpace
  (
    commentLine* ~maybeComments
    (IdDeclaration | ParameterDeclaration | LocalDeclaration | GenericDirective)
  )*
  commentLine* ~maybeComments
  Metadata?
  Commands?
  ImmediateCommands?
  HardwareCommands?
}

// Potential Improvements
// maintainability - use @specialize on directives
// expressiveness - add activate, load and ground syntax

@precedence {
  stemStart @cut
}

GenericDirective {
  genericDirective (whiteSpace String)* newLine
}

IdDeclaration {
  idDirective whiteSpace String newLine
}

ParameterDeclaration {
  parameterDirective (whiteSpace Enum)+ newLine
}

LocalDeclaration {
  localsDirective (whiteSpace Enum)+ newLine
}

commandBlock {
  (Command | commentLine ~maybeComments)+
}

commentLine {
  LineComment newLine
}

optSpace {
  (newLine | whiteSpace)?
}

Commands {
  (LoadAndGoDirective newLine)?
  commandBlock
}

ImmediateCommands {
  immediateDirective newLine
  commandBlock
}

HardwareCommands {
  hardwareDirective newLine
  commandBlock
}

TimeTag { TimeAbsolute | TimeEpoch | TimeRelative  | TimeComplete }

Args {
  (whiteSpace (arg | RepeatArg))* whiteSpace?
}

RepeatArg {
  "[" (whiteSpace? arg)* whiteSpace? "]"
}

arg[@isGroup=Arguments] { Number | String | Enum }

Command {
  TimeTag?
  Stem
  Args
  LineComment?
  newLine
  Metadata?
  Models?
}

Metadata {
  MetaEntry {
    metadataDirective
    whiteSpace Key { String }
    whiteSpace Value { metaValue }
    newLine
  }+
}

metaValue {
  String | Number | Boolean | Null | Array | Object
}

Object { "{" list<Property>? "}" }
Array  { "[" list<metaValue>? "]" }

Property { PropertyName optSpace ":" optSpace metaValue }
PropertyName[isolate] { String }

list<item> { optSpace item (optSpace "," optSpace item)* optSpace }

Models {
  Model {
    modelDirective
    whiteSpace Variable { String }
    whiteSpace Value { String | Number | Boolean }
    whiteSpace Offset { String }
    newLine
  }+
}

Enum { identifier }

Stem { !stemStart identifier }

@tokens {
  identifier { @asciiLetter (@asciiLetter| @digit | "_" | "-")* }

  timeHhmmss { @digit@digit":"@digit@digit":"@digit@digit("."@digit+)? }

  timeDOY { @digit@digit@digit"T"timeHhmmss }

  timeSecond { $[1-9] @digit* ("."@digit+)? }

  TimeAbsolute { 'A'@digit@digit@digit@digit"-"@digit@digit@digit"T"timeHhmmss whiteSpace }

  TimeRelative { 'R'(timeSecond | timeDOY | timeHhmmss) whiteSpace}

  TimeEpoch { 'E'$[+\-]?(timeSecond | timeDOY | timeHhmmss) whiteSpace}

  TimeComplete { 'C' whiteSpace }

  String { '"' (!["\\] | "\\" _)* '"' }

  hex { @digit | $[A-F] }

  Number {
    ("+" | "-")? (@digit ("_" | @digit)* ("." ("_" | @digit)*)? | "." @digit ("_" | @digit)*)
    (("e" | "E") ("+" | "-")? ("_" | @digit)+)? |
    @digit ("_" | @digit)* "n" |
    "0x" (hex | "_")+ "n"?
  }

  TRUE { "true" }
  FALSE { "false" }
  Boolean { TRUE | FALSE }
  Null { "null" }

  LineComment { "#"![\n\r]* }

  newLine { ($[ \t]* "\n")+ $[ \t]* |  (whiteSpace? @eof) }

  whiteSpace { $[ \t]+ }

  idDirective { "@ID" }
  LoadAndGoDirective { "@LOAD_AND_GO"}
  immediateDirective { "@IMMEDIATE" }
  hardwareDirective { "@HARDWARE" }
  localsDirective { "@LOCALS" }
  parameterDirective { "@INPUT_PARAMS" }
  metadataDirective { "@METADATA" }
  modelDirective { "@MODEL" }
  genericDirective { "@"identifier }

  @precedence { newLine, whiteSpace }

  @precedence{ TimeAbsolute, TimeRelative, TimeEpoch, TimeComplete, identifier }

  @precedence {
    idDirective,
    metadataDirective,
    modelDirective,
    immediateDirective,
    hardwareDirective,
    localsDirective,
    parameterDirective,
    LoadAndGoDirective,
    genericDirective,
    identifier
  }
}
