name: Test

on:
  pull_request:
    branches:
      - develop
      - ssmo-dev
      - dev-[0-9]+.[0-9]+.[0-9]+
    types:
      # defaults + 'edited', to handle changes to flags like ___REQUIRES_AERIE_PR___ in the PR body
      [opened, synchronize, reopened, edited]
  push:
    branches:
      - develop
      - ssmo-dev
    tags:
      - v*
  workflow_dispatch:
  workflow_call:
    inputs:
      env:
        description: 'Github Actions environment that the test workflow should run under'
        type: string
        required: false

env:
  AERIE_PASSWORD: '${{vars.AERIE_PASSWORD}}'
  AERIE_USERNAME: '${{vars.AERIE_USERNAME}}'
  HASURA_GRAPHQL_ADMIN_SECRET: '${{vars.HASURA_GRAPHQL_ADMIN_SECRET}}'
  HASURA_GRAPHQL_JWT_SECRET: '${{vars.HASURA_GRAPHQL_JWT_SECRET}}'
  POSTGRES_USER: '${{vars.POSTGRES_USER}}'
  POSTGRES_PASSWORD: '${{vars.POSTGRES_PASSWORD}}'
  GATEWAY_USERNAME: '${{vars.GATEWAY_USERNAME}}'
  GATEWAY_PASSWORD: '${{vars.GATEWAY_PASSWORD}}'
  MERLIN_USERNAME: '${{vars.MERLIN_USERNAME}}'
  MERLIN_PASSWORD: '${{vars.MERLIN_PASSWORD}}'
  SCHEDULER_USERNAME: '${{vars.SCHEDULER_USERNAME}}'
  SCHEDULER_PASSWORD: '${{vars.SCHEDULER_PASSWORD}}'
  SEQUENCING_USERNAME: '${{vars.SEQUENCING_USERNAME}}'
  SEQUENCING_PASSWORD: '${{vars.SEQUENCING_PASSWORD}}'
  PR_BODY: '${{github.event.pull_request.body}}'

jobs:
  unit-test:
    runs-on: self-hosted
    steps:
      - name: Checkout Repo (UI)
        uses: actions/checkout@v4
      - name: Setup Node (UI)
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: npm
      - name: Cache Unit Test Modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: aerie-ui-node-cache
        with:
          path: ~/.npm
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            ${{ env.cache-name }}-
      - name: Install Dependencies (UI)
        run: npm ci
      - name: Build (UI)
        run: npm run build
      - name: Test (unit)
        run: npm run test:unit:coverage
      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Unit Test Results
          path: |
            **/unit-test-results
  e2e-test:
    runs-on: self-hosted
    environment: ${{ inputs.env || 'test-workflow' }}
    steps:
      - name: Checkout Repo (UI)
        uses: actions/checkout@v4
      - name: Setup Node (UI)
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: npm
      - name: Extract Aerie backend docker tag from PR body
        # look in the PR body for eg. the string ___REQUIRES_AERIE_PR___=9999, extract the number & save to env var
        # if backend PR is labeled correctly, it will publish a docker tag called 'pr-9999' to use in tests
        if: ${{ contains(env.PR_BODY, '___REQUIRES_AERIE_PR___=') }}
        run: |
          echo "AERIE_IMAGE_TAG=pr-$(echo $PR_BODY | sed -n 's/.*___REQUIRES_AERIE_PR___=\"\([0-9]\+\)\".*/\1/p')" >> $GITHUB_ENV
      - name: Extract Aerie gateway docker tag from PR body
        # look in the PR body for eg. the string ___REQUIRES_AERIE_PR___=9999, extract the number & save to env var
        # if backend PR is labeled correctly, it will publish a docker tag called 'pr-9999' to use in tests
        if: ${{ contains(env.PR_BODY, '___REQUIRES_GATEWAY_PR___=') }}
        run: |
          echo "GATEWAY_IMAGE_TAG=pr-$(echo $PR_BODY | sed -n 's/.*___REQUIRES_GATEWAY_PR___=\"\([0-9]\+\)\".*/\1/p')" >> $GITHUB_ENV
      - name: Start Services (Aerie)
        run: |
          echo "AERIE_IMAGE_TAG: $AERIE_IMAGE_TAG"
          echo "GATEWAY_IMAGE_TAG: $GATEWAY_IMAGE_TAG"
          docker compose -f docker-compose-test.yml up -d --quiet-pull
          docker images
          docker ps -a --no-trunc
      - name: Cache E2E Test Modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: aerie-ui-node-cache
        with:
          path: ~/.npm
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            ${{ env.cache-name }}-
      - name: Install Dependencies (UI)
        run: npm ci
      - name: Build (UI)
        run: npm run build
      - name: Install Playwright Dependencies (Test - e2e)
        run: npx playwright install chromium --with-deps
      - name: Test (e2e)
        run: npm run test:e2e
      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: E2E Test Results
          path: |
            **/e2e-test-results
      - name: Print Logs for Services (Aerie)
        if: always()
        run: docker compose -f docker-compose-test.yml logs -t
      - name: Stop Services (Aerie)
        if: always()
        run: |
          docker ps -a
          docker compose -f docker-compose-test.yml down
          docker ps -a
      - name: Prune Volumes (Aerie)
        if: always()
        run: docker volume prune --force
