name: Test

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
    tags:
      - v*

env:
  AERIE_PASSWORD: '${{secrets.AERIE_PASSWORD}}'
  AERIE_USERNAME: '${{secrets.AERIE_USERNAME}}'
  HASURA_GRAPHQL_ADMIN_SECRET: '${{secrets.HASURA_GRAPHQL_ADMIN_SECRET}}'
  HASURA_GRAPHQL_JWT_SECRET: '${{secrets.HASURA_GRAPHQL_JWT_SECRET}}'
  POSTGRES_PASSWORD: '${{secrets.POSTGRES_PASSWORD}}'
  POSTGRES_USER: '${{secrets.POSTGRES_USER}}'

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test-workflow
    steps:
      - name: Checkout Repo (UI)
        uses: actions/checkout@v3
      - name: Setup Node (UI)
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: npm
      - name: Start Services (Aerie)
        run: |
          docker compose -f docker-compose-test.yml up -d
          docker images
          docker ps -a
      - name: Install Dependencies (UI)
        run: npm ci
      - name: Build (UI)
        run: npm run build
      - name: Install Playwright Dependencies (Test - e2e)
        run: npx playwright install chromium --with-deps
      - name: Test (e2e)
        run: npm run test:e2e
      - name: Test (unit)
        run: npm run test:unit
      - name: Upload Results (Test - e2e)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: '**/e2e-test-results'
      - name: Upload Results (Test - unit)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: '**/unit-test-results'
      - name: Print Logs for Services (Aerie)
        if: always()
        run: docker compose -f docker-compose-test.yml logs -t
      - name: Stop Services (Aerie)
        if: always()
        run: |
          docker ps -a
          docker compose -f docker-compose-test.yml down
          docker ps -a
      - name: Prune Volumes (Aerie)
        if: always()
        run: docker volume prune --force
